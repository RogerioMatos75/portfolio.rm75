// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Technology {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  icon        String?
  category    String
  projects    Project[] @relation("ProjectTechnologies")
  skills      Skill[]   @relation("SkillTechnologies")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id           String       @id @default(uuid())
  title        String
  description  String
  imageUrl     String?
  demoUrl      String?
  repoUrl      String?
  technologies Technology[] @relation("ProjectTechnologies")
  featured     Boolean      @default(false)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Skill {
  id           String       @id @default(uuid())
  name         String
  category     String
  proficiency  Int          @default(0) // 0-100 scale
  icon         String?
  technologies Technology[] @relation("SkillTechnologies")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Experience {
  id          String    @id @default(uuid())
  title       String
  company     String
  location    String?
  startDate   DateTime
  endDate     DateTime?
  current     Boolean   @default(false)
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Education {
  id          String    @id @default(uuid())
  institution String
  degree      String
  field       String
  startDate   DateTime
  endDate     DateTime?
  current     Boolean   @default(false)
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Contact {
  id        String   @id @default(uuid())
  name      String
  email     String
  subject   String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
